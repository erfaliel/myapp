# syntax=docker/dockerfile:1

# ---- Build Stage ----
FROM hexpm/elixir:1.14.5-erlang-25.3.2.6-alpine-3.18 AS build

# Install build dependencies
RUN apk add --no-cache build-base git npm

# Set environment variables for Elixir
ENV MIX_ENV=prod \
    LANG=C.UTF-8

# Create app directory
WORKDIR /app

# Install Hex + Rebar
RUN mix local.hex --force && \
    mix local.rebar --force

# Copy mix files and config first for dependency caching
COPY --link mix.exs mix.lock ./
COPY --link config ./config

# Install Elixir dependencies
RUN mix deps.get --only prod
RUN mix deps.compile

# Copy the rest of the application source
COPY --link . .

# Compile the application
RUN mix compile

# Build assets (js/css)
RUN mix assets.deploy

# Generate release
RUN mix release --no-deps-check --no-compile

# ---- Release Stage ----
FROM alpine:3.18 AS app

# Install runtime dependencies
RUN apk add --no-cache libstdc++ openssl ncurses-libs

# Create non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

WORKDIR /app

# Copy release from build stage
COPY --from=build /app/_build/prod/rel/test .

# Set permissions
RUN chown -R appuser:appgroup /app
USER appuser

# Expose the port (default 4000, can be overridden by env)
EXPOSE 4000

# Set default environment variables (can be overridden at runtime)
ENV MIX_ENV=prod \
    LANG=C.UTF-8 \
    PHX_SERVER=true

# Entrypoint
CMD ["bin/test", "start"]
